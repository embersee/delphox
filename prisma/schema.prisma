// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider     = "mysql"
  relationMode = "prisma"
  url          = env("DATABASE_URL")
}

model Computer {
  id    String @id @default(cuid())
  brand String
  cores Int
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @unique
  username      String
  name          String?
  displayName   String?
  email         String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bot           Bot[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Bot {
  id               String  @id @default(cuid())
  userId           String
  username         String
  displayName      String  @default("")
  botToken         String  @db.VarChar(50)
  active           Boolean @default(false)
  description      String  @default("") @db.VarChar(512)
  shortDescription String  @default("") @db.VarChar(120)
  menuButton       String  @default("")

  command Command[]

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Command {
  id      String  @id @default(cuid())
  command String
  content String
  Bot     Bot?    @relation(fields: [botId], references: [id])
  botId   String?

  @@index([botId])
}
